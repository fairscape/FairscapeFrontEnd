export const ROCrateUploadProperties = [
  { name: "Name", key: "name", type: "text", required: true },
  { name: "Persistent Identifier", key: "guid", type: "text", required: true },
  { name: "Description", key: "description", type: "text", required: false },
  {
    name: "Source Organization",
    key: "sourceOrganization",
    type: "text",
    required: false,
  },
  {
    name: "File",
    key: "metadataGraph",
    type: "list:file",
    required: true,
  },
];

export const DatasetUploadProperties = [
  { name: "Name", key: "name", type: "text", required: true },
  { name: "Persistent Identifier", key: "@id", type: "text", required: true },
  { name: "Description", key: "description", type: "text", required: false },
  { name: "Author", key: "author", type: "text", required: false },
  { name: "Owner", key: "owner", type: "text", required: false },
  { name: "Generated By", key: "generatedBy", type: "text", required: false },
  {
    name: "Date Published",
    key: "datePublished",
    type: "date",
    required: false,
  },
  { name: "Keywords", key: "keywords", type: "text", required: false },
  { name: "File", key: "Distribution", type: "file", required: false },
];

export const SoftwareUploadProperties = [
  { name: "Name", key: "title", type: "text", required: true },
  { name: "Persistent Identifier", key: "guid", type: "text", required: true },
  { name: "Description", key: "description", type: "text", required: false },
  { name: "Author", key: "author", type: "text", required: false },
  { name: "Used By", key: "usedBy", type: "list:text", required: false },
  {
    name: "Date Published",
    key: "datePublished",
    type: "date",
    required: false,
  },
  { name: "Keywords", key: "keywords", type: "text", required: false },
  {
    name: "Distributions",
    key: "distributions",
    type: "file",
    required: false,
  },
];

export const SchemaUploadProperties = [
  { name: "Name", key: "name", type: "text", required: true },
  { name: "Description", key: "description", type: "text", required: false },
  { name: "Persistent Identifier", key: "@id", type: "text", required: true },
  {
    name: "Properties",
    key: "properties",
    type: "list:property",
    required: false,
  },
  { name: "Author", key: "author", type: "text", required: false },
  { name: "License", key: "license", type: "text", required: false },
];

const getPropertyList = (type) => {
  const cleanType = type.replace(/^evi:/, "");

  switch (cleanType) {
    case "ROCrate":
      return ROCrateUploadProperties;
    case "Dataset":
      return DatasetUploadProperties;
    case "Software":
      return SoftwareUploadProperties;
    case "Schema":
      return SchemaUploadProperties;
    default:
      return [];
  }
};

export default getPropertyList;
